//
// LoginAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class LoginAPI {
    /**
     Change password

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func changeData(body: ChangeUserData, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        changeDataWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Change password
     - POST /login/change
     - 

     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func changeDataWithRequestBuilder(body: ChangeUserData) -> RequestBuilder<Void> {
        let path = "/login/change"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Login into application

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func login(body: LoginUser, completion: @escaping ((_ data: User?,_ error: Error?) -> Void)) {
        loginWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Login into application
     - POST /login
     - 

     - examples: [{contentType=application/json, example={
  "avatarUrl" : "avatarUrl",
  "losesCount" : 1,
  "winningCount" : 6,
  "id" : 0,
  "login" : "login"
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<User> 
     */
    open class func loginWithRequestBuilder(body: LoginUser) -> RequestBuilder<User> {
        let path = "/login"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<User>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Register new user

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func registerUser(body: LoginUser, completion: @escaping ((_ data: User?,_ error: Error?) -> Void)) {
        registerUserWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Register new user
     - PUT /login/register
     - 

     - examples: [{contentType=application/json, example={
  "avatarUrl" : "avatarUrl",
  "losesCount" : 1,
  "winningCount" : 6,
  "id" : 0,
  "login" : "login"
}}]
     - parameter body: (body)  

     - returns: RequestBuilder<User> 
     */
    open class func registerUserWithRequestBuilder(body: LoginUser) -> RequestBuilder<User> {
        let path = "/login/register"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<User>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
